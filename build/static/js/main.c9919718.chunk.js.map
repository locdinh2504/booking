{"version":3,"sources":["GlobalLoading/global_loading.gif","serviceWorker.js","GlobalLoading/style.js","GlobalLoading/GlobalLoading.js","reduxform/index.js","reduxform/radio.js","reduxform/style.js","reduxform/select.js","reduxform/selectPrice.js","constants/index.js","actions/index.js","constants/ui.js","actions/modal.js","component/TaskForm/style.js","component/TaskForm/index.js","component/TaskFormEdit/style.js","component/TaskFormEdit/index.js","component/TaskList/style.js","component/TaskList/index.js","constants/status.js","container/TaskBoard/style.js","container/TaskBoard/index.js","component/Modal/style.js","component/Modal/index.js","AxiosService/index.js","apis/index.js","saga/index.js","reducer/task.js","reducer/ui.js","reducer/modal.js","reducer/index.js","store/configStore.js","container/App/style.js","container/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","style","global","position","top","right","left","bottom","zIndex","backgroundColor","icon","marginLeft","marginRight","width","GlobalLoading","this","props","classes","xhtml","showloading","className","src","loading","atl","Component","withUI","connect","state","ui","compose","withStyles","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","radioButton","status","hotel","rest","FormControl","RadioGroup","FormControlLabel","value","control","Radio","FormHelperText","renderFromHelper","marginTop","price","children","InputLabel","htmlFor","Select","native","inputProps","name","id","helpertext","API_URL","fetchdata","type","fetchdatasucces","data","payload","fetchdatafail","hideloading","addtask","roomName","quantity","notes","addtasksuccess","addtaskfail","deletetask","deletetasksuccess","deletetaskfail","setdata","task","updatetask","upData","updatetasksuccess","updatetaskfail","showmodal","hidemodal","changemodaltitle","title","changemodalcontent","component","container","padding","button","buttonSubmit","quantityContent","display","includeContent","justifyContent","TaskForm","handleSubmitForm","taskActionsCreators","modalActiosnCreators","showForm","room","Grid","item","md","Field","renderSelectField","InputProps","min","max","renderSelectFieldPrice","Intl","NumberFormat","currency","format","multiline","rowsMax","margin","Button","variant","color","size","onClick","handleSubmit","onSubmit","withconnect","listRoom","dispatch","bindActionCreators","withReduxForm","reduxForm","form","validate","values","errors","forEach","field","quantiy","TaskFormEdit","console","log","renderEditing","roomEditing","hotelName","initialValues","cardActions","alignItems","fontWeight","textAlign","buttonContainer","buttonDelete","fontSize","minWidth","rowContainer","height","TaskList","deleteTask","totalPrice","editTask","showInclude","TableCell","align","showStorage","TableBody","TableRow","STATUS_CODE","HOTEL_LIST","image","roomNameS","roomNameSS","roomNameSSS","include1","include2","storage","priceS","priceSS","priceSSS","root","items","fab","float","media","gridHotel","rootHotel","buttonHotel","marginBottom","editContainer","table","TaskBoard","renderHotel","map","index","xs","key","Card","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","CardActions","arial-label","addTaskRoom","disabled","showRenderGrid","modalActionCretors","onDeleteData","onEditTask","open","hotelContainer","spacing","Box","mt","mb","Table","aria-label","TableHead","theme","modal","transform","palette","background","paper","boxShadow","shadows","header","cursor","ModalBoard","modalActionCreators","handleClose","Modal","onClose","content","showModal","handlesuccess","res","handlefail","Promise","reject","instance","axios","create","url","get","body","post","delete","put","fetchListData","AxiosService","addtaskData","deleteData","updateData","addtasksaga","deletesaga","updatesaga","fetchListTaskSaga","rootsaga","call","resp","delay","select","take","fork","takeLatest","takeEvery","initialstate","action","concat","taskId","filter","UP","findIndex","x","newList","slice","myReducer","combineReducers","formReducer","composeEnhancers","sagaMiddleware","createSagaMiddleware","store","middleware","thunk","enhancer","applyMiddleware","createStore","run","configStore","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c9919718.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/global_loading.6192e41a.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const style = () => ({\r\n  global: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    right: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    zIndex: 99,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.4)\"\r\n  },\r\n  icon: {\r\n    top: \"40%\",\r\n    position: \"fixed\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    left: 0,\r\n    right: 0,\r\n    width: 100\r\n  }\r\n});\r\n\r\nexport default style;\r\n","import { withStyles } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport loading from \"./../GlobalLoading/global_loading.gif\";\r\nimport style from \"./style\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass GlobalLoading extends Component {\r\n  render() {\r\n    var { classes, showloading } = this.props;\r\n    var xhtml = null;\r\n    if (showloading) {\r\n      xhtml = (\r\n        <div className={classes.global}>\r\n          <img className={classes.icon} src={loading} atl=\"loading\" />\r\n        </div>\r\n      );\r\n    }\r\n    return xhtml;\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    showloading: state.ui.showloading\r\n  };\r\n};\r\n\r\nconst withUI = connect(mapStatetoProps, null);\r\n\r\nexport default compose(withStyles(style), withUI)(GlobalLoading);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nexport default renderTextField;\r\n","import {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { compose } from \"redux\";\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst radioButton = ({\r\n  status,\r\n  hotel,\r\n  meta: { touched, error },\r\n  input,\r\n  ...rest\r\n}) => (\r\n  <FormControl error={touched && error}>\r\n    <RadioGroup {...input} {...rest}>\r\n      <p>Resort</p>\r\n      <FormControlLabel\r\n        value={hotel}\r\n        control={<Radio />}\r\n        label={hotel}\r\n        error={touched && error}\r\n      />\r\n      {renderFromHelper({ touched, error })}\r\n    </RadioGroup>\r\n  </FormControl>\r\n);\r\n\r\nexport default radioButton;\r\n","const style = () => ({\r\n  TextField: {\r\n    width: \"100%\",\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nexport default style;\r\n","import {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Select,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport style from \"./style\";\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst renderSelectField = ({\r\n  price,\r\n  classes,\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={classes.TextField}>\r\n    <InputLabel htmlFor=\"age-native-simple\">Confirm Room</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: \"Room\",\r\n        id: \"age-native-simple\",\r\n      }}\r\n      error={touched && error}\r\n      helpertext=\"Incorrect entry.\"\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\n\r\nexport default withStyles(style)(renderSelectField);\r\n","import {\r\n  FormControl,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Select,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport style from \"./style\";\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return;\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>;\r\n  }\r\n};\r\n\r\nconst renderSelectFieldPrice = ({\r\n  price,\r\n  classes,\r\n  input,\r\n  label,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={classes.TextField}>\r\n    <InputLabel htmlFor=\"age-native-simple\">Confirm Price</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n      inputProps={{\r\n        name: \"Room\",\r\n        id: \"age-native-simple\",\r\n      }}\r\n      error={touched && error}\r\n      helperText=\"Incorrect entry.\"\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n);\r\n\r\nexport default withStyles(style)(renderSelectFieldPrice);\r\n","export const API_URL = \"https://5e9d88440fd0b50016f75657.mockapi.io/api\";\r\nexport const FETCH_DATA = \"FETCH_DATA\";\r\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\r\nexport const FETCH_DATA_FAIL = \"FETCH_DATA_FAIL\";\r\n\r\nexport const ADD_DATA = \"ADD_DATA\";\r\nexport const ADD_DATA_SUCCESS = \"ADD_DATA_SUCCESS\";\r\nexport const ADD_DATA_FAIL = \"ADD_DATA_FAIL\";\r\n\r\nexport const DELETE_DATA = \"DELETE_DATA\";\r\nexport const DELETE_DATA_SUCCESS = \"DELETE_DATA_SUCCESS\";\r\nexport const DELETE_DATA_FAIL = \"DELETE_DATA_FAIL\";\r\n\r\nexport const SET_DATA_EDITING = \"SET_DATA_EDITING\";\r\n\r\nexport const UPDATE_DATA = \"UPDATE_DATA\";\r\nexport const UPDATE_DATA_SUCCESS = \"UPDATE_DATA_SUCCESS\";\r\nexport const UPDATE_DATA_FAIL = \"UPDATE_DATA_FAIL\";\r\n","import * as types from \"./../constants/index\";\r\nimport * as uis from \"./../constants/ui\";\r\nexport const fetchdata = () => {\r\n  return {\r\n    type: types.FETCH_DATA,\r\n  };\r\n};\r\n\r\nexport const fetchdatasucces = (data) => {\r\n  return {\r\n    type: types.FETCH_DATA_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchdatafail = (data) => {\r\n  return {\r\n    type: types.FETCH_DATA_FAIL,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\n///show hide loading ///\r\nexport const showloading = () => {\r\n  return {\r\n    type: uis.SHOW_LOADING,\r\n  };\r\n};\r\n\r\nexport const hideloading = () => {\r\n  return {\r\n    type: uis.HIDE_LOADING,\r\n  };\r\n};\r\n\r\n///add data /////\r\n\r\nexport const addtask = (roomName, quantity, notes) => {\r\n  return {\r\n    type: types.ADD_DATA,\r\n    payload: {\r\n      roomName,\r\n      quantity,\r\n      notes,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addtasksuccess = (data) => {\r\n  return {\r\n    type: types.ADD_DATA_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addtaskfail = (error) => {\r\n  return {\r\n    type: types.ADD_DATA_FAIL,\r\n    payload: {\r\n      error,\r\n    },\r\n  };\r\n};\r\n\r\n////delete data /////////\r\nexport const deletetask = (id) => {\r\n  return {\r\n    type: types.DELETE_DATA,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deletetasksuccess = (data) => {\r\n  return {\r\n    type: types.DELETE_DATA_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deletetaskfail = (data) => {\r\n  return {\r\n    type: types.DELETE_DATA_FAIL,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\n//set data editing ////\r\nexport const setdata = (task) => {\r\n  return {\r\n    type: types.SET_DATA_EDITING,\r\n    payload: {\r\n      task,\r\n    },\r\n  };\r\n};\r\n\r\n//update data////\r\n\r\nexport const updatetask = (upData) => {\r\n  return {\r\n    type: types.UPDATE_DATA,\r\n    payload: {\r\n      upData,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updatetasksuccess = (data) => {\r\n  return {\r\n    type: types.UPDATE_DATA_SUCCESS,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\nexport const updatetaskfail = (data) => {\r\n  return {\r\n    type: types.UPDATE_DATA_FAIL,\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n","export const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const HIDE_LOADING = \"HIDE_LOADING\";\r\n\r\nexport const SHOW_MODAL = \"SHOW_MODAL\";\r\nexport const HIDE_MODAL = \"HIDE_MODAL\";\r\n\r\nexport const CHANGE_MODAL_TITLE = \"CHANGE_MODAL_TITLE\";\r\nexport const CHANGE_MODAL_CONTENT = \"CHANGE_MODAL_CONTENT\";\r\n","import * as uis from \"./../constants/ui\";\r\n\r\n///show hide modal ///\r\n\r\nexport const showmodal = () => {\r\n  return {\r\n    type: uis.SHOW_MODAL\r\n  };\r\n};\r\nexport const hidemodal = () => {\r\n  return {\r\n    type: uis.HIDE_MODAL\r\n  };\r\n};\r\n\r\nexport const changemodaltitle = title => {\r\n  return {\r\n    type: uis.CHANGE_MODAL_TITLE,\r\n    payload: {\r\n      title\r\n    }\r\n  };\r\n};\r\n\r\nexport const changemodalcontent = component => {\r\n  return {\r\n    type: uis.CHANGE_MODAL_CONTENT,\r\n    payload: {\r\n      component\r\n    }\r\n  };\r\n};\r\n","const style = () => ({\r\n  TextField: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n  },\r\n  container: {\r\n    padding: 20,\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n  },\r\n  buttonSubmit: {\r\n    marginRight: 10,\r\n  },\r\n  quantityContent: {\r\n    marginTop: 20,\r\n\r\n    display: \"block\",\r\n  },\r\n  includeContent: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default style;\r\n","import { Grid, withStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport renderTextField from \"../../reduxform/index\";\r\nimport radioButton from \"../../reduxform/radio\";\r\nimport renderSelectField from \"../../reduxform/select\";\r\nimport renderSelectFieldPrice from \"../../reduxform/selectPrice\";\r\nimport * as taskActionsCreators from \"./../../actions/index\";\r\nimport * as modalActiosnCreators from \"./../../actions/modal\";\r\nimport style from \"./style\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  const requiredFields = [\"roomName\", \"hotelName\", \"quantity\", \"price\"];\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n  if (values.quantiy > 10) {\r\n    errors.quantity = \"Please under 10\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nclass TaskForm extends Component {\r\n  handleSubmitForm = (data) => {\r\n    // const { hotel, include1, include2, storage, price, quantity, notes } = data;\r\n\r\n    const { taskActionsCreators, modalActiosnCreators } = this.props;\r\n    const { addtask, fetchdata } = taskActionsCreators;\r\n    const { hidemodal } = modalActiosnCreators;\r\n\r\n    addtask(data);\r\n    fetchdata();\r\n    hidemodal();\r\n  };\r\n\r\n  showForm = () => {\r\n    const { classes, hotel, room, price, hidemodal } = this.props;\r\n\r\n    return (\r\n      <Grid container>\r\n        <Grid item md={12}>\r\n          <div>\r\n            <Field value=\"hotel\" component=\"h1\" name=\"hotel\">\r\n              {hotel} - {room}\r\n            </Field>\r\n          </div>\r\n          {/* hotel name */}\r\n          <div>\r\n            <Field\r\n              name=\"hotelName\"\r\n              hotel={hotel}\r\n              error\r\n              component={radioButton}\r\n            ></Field>\r\n          </div>\r\n          {/* room name */}\r\n          <div>\r\n            <Field\r\n              name=\"roomName\"\r\n              component={renderSelectField}\r\n              label=\"roomName\"\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value={room}>{room}</option>\r\n            </Field>\r\n          </div>\r\n          {/* //Quantity/// */}\r\n          <div className={classes.quantityContent}>\r\n            <Field\r\n              name=\"quantity\"\r\n              type=\"number\"\r\n              InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n              label=\"Quantity\"\r\n              component={renderTextField}\r\n            ></Field>\r\n          </div>\r\n\r\n          {/* ///price/// */}\r\n          <div>\r\n            <Field\r\n              name=\"price\"\r\n              component={renderSelectFieldPrice}\r\n              label=\"price\"\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value={price}>\r\n                {new Intl.NumberFormat(\"ja-JP\", {\r\n                  style: \"currency\",\r\n                  currency: \"JPY\",\r\n                }).format(price)}\r\n              </option>\r\n            </Field>\r\n          </div>\r\n\r\n          {/* include 1 2 */}\r\n          <div className={classes.includeContent}></div>\r\n          {/* notes  */}\r\n          <div>\r\n            <Field\r\n              className={classes.TextField}\r\n              name=\"notes\"\r\n              component={renderTextField}\r\n              label=\"Notes\"\r\n              multiline\r\n              rowsMax=\"4\"\r\n              margin=\"normal\"\r\n            />\r\n          </div>\r\n          <div className={classes.button}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              className={classes.buttonSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"button\"\r\n              size=\"small\"\r\n              onClick={hidemodal}\r\n            >\r\n              Cancle\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, hidemodal, handleSubmit, room, hotel } = this.props;\r\n\r\n    return (\r\n      <form\r\n        className={classes.container}\r\n        onSubmit={handleSubmit(this.handleSubmitForm)}\r\n      >\r\n        {this.showForm()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    listRoom: state.task.listRoom,\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    taskActionsCreators: bindActionCreators(taskActionsCreators, dispatch),\r\n    modalActiosnCreators: bindActionCreators(modalActiosnCreators, dispatch),\r\n  };\r\n};\r\n\r\nconst withconnect = connect(mapStatetoProps, mapDispatchtoProps);\r\n\r\nconst FORM_NAME = \"TASK_FORM\";\r\n\r\nconst withReduxForm = reduxForm({\r\n  form: FORM_NAME,\r\n  validate,\r\n});\r\n\r\nexport default compose(withconnect, withReduxForm, withStyles(style))(TaskForm);\r\n","const style = () => ({\r\n  TextField: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n  },\r\n  container: {\r\n    padding: 20,\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n  },\r\n  buttonSubmit: {\r\n    marginRight: 10,\r\n  },\r\n  quantityContent: {\r\n    marginTop: 20,\r\n\r\n    display: \"block\",\r\n  },\r\n  includeContent: {\r\n    display: \"flex\",\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport default style;\r\n","import { Grid, withStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport renderTextField from \"../../reduxform/index\";\r\nimport renderSelectField from \"../../reduxform/select\";\r\nimport radioButton from \"../../reduxform/radio\";\r\nimport renderSelectFieldPrice from \"../../reduxform/selectPrice\";\r\nimport renderCheckbox from \"../../reduxform/checkbox\";\r\nimport * as taskActionsCreators from \"../../actions/index\";\r\nimport * as modalActiosnCreators from \"../../actions/modal\";\r\nimport style from \"./style\";\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  const requiredFields = [\"roomName\", \"hotelName\", \"quantity\", \"price\"];\r\n  requiredFields.forEach((field) => {\r\n    if (!values[field]) {\r\n      errors[field] = \"Required\";\r\n    }\r\n  });\r\n  if (values.quantiy > 10) {\r\n    errors.quantity = \"Please under 10\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nclass TaskFormEdit extends Component {\r\n  handleSubmitForm = (data) => {\r\n    console.log(\"data submit :\", data);\r\n    const { taskActionsCreators } = this.props;\r\n    const { updatetask, fetchdata } = taskActionsCreators;\r\n    updatetask(data);\r\n    fetchdata();\r\n  };\r\n\r\n  renderEditing = () => {\r\n    let xhtml = null;\r\n    const { roomEditing, status } = this.props;\r\n    if (roomEditing && roomEditing.id) {\r\n      xhtml = (\r\n        <div>\r\n          <Field name=\"roomName\" component={renderSelectField} label=\"roomName\">\r\n            <option value=\"\"></option>\r\n            <option value={status.roomName}>{status.roomName}</option>\r\n          </Field>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return xhtml;\r\n  };\r\n\r\n  showForm = () => {\r\n    const {\r\n      classes,\r\n      hotel,\r\n      room,\r\n      price,\r\n      hidemodal,\r\n      roomEditing,\r\n      status,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Grid container>\r\n        <Grid item md={12}>\r\n          <div>\r\n            <Field value=\"hotel\" component=\"h1\" name=\"hotel\">\r\n              {status.hotelName}\r\n            </Field>\r\n          </div>\r\n          {/* hotel name */}\r\n          <div>\r\n            <Field\r\n              name=\"hotelName\"\r\n              hotel={status.hotelName}\r\n              error\r\n              component={radioButton}\r\n            ></Field>\r\n          </div>\r\n\r\n          {/* //Quantity/// */}\r\n          <div className={classes.quantityContent}>\r\n            <Field\r\n              name=\"quantity\"\r\n              type=\"number\"\r\n              InputProps={{ inputProps: { min: 1, max: 10 } }}\r\n              label=\"Quantity\"\r\n              component={renderTextField}\r\n              value={roomEditing.quantity}\r\n            ></Field>\r\n          </div>\r\n          {/* ///price/// */}\r\n          <div>\r\n            <Field\r\n              name=\"price\"\r\n              component={renderSelectFieldPrice}\r\n              label=\"price\"\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value={status.price}>{status.price}</option>\r\n            </Field>\r\n          </div>\r\n\r\n          {/* ///render editing select //// */}\r\n          {this.renderEditing()}\r\n          {/* notes  */}\r\n          <div>\r\n            <Field\r\n              className={classes.TextField}\r\n              name=\"notes\"\r\n              component={renderTextField}\r\n              label=\"Notes\"\r\n              multiline\r\n              rowsMax=\"4\"\r\n              margin=\"normal\"\r\n              value={roomEditing.notes}\r\n            />\r\n          </div>\r\n          <div className={classes.button}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              size=\"small\"\r\n              className={classes.buttonSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"button\"\r\n              size=\"small\"\r\n              onClick={hidemodal}\r\n            >\r\n              Cancle\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      hidemodal,\r\n      handleSubmit,\r\n      room,\r\n      hotel,\r\n      roomEditing,\r\n    } = this.props;\r\n\r\n    return (\r\n      <form\r\n        className={classes.container}\r\n        onSubmit={handleSubmit(this.handleSubmitForm)}\r\n      >\r\n        {this.showForm()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    listRoom: state.task.listRoom,\r\n    roomEditing: state.task.roomEditing,\r\n    initialValues: {\r\n      quantity: state.task.roomEditing ? state.task.roomEditing.quantity : null,\r\n      notes: state.task.roomEditing ? state.task.roomEditing.notes : null,\r\n      roomName: state.task.roomEditing ? state.task.roomEditing.roomName : null,\r\n      price: state.task.roomEditing ? state.task.roomEditing.price : null,\r\n      hotelName: state.task.roomEditing\r\n        ? state.task.roomEditing.hotelName\r\n        : null,\r\n    },\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    taskActionsCreators: bindActionCreators(taskActionsCreators, dispatch),\r\n    modalActiosnCreators: bindActionCreators(modalActiosnCreators, dispatch),\r\n  };\r\n};\r\n\r\nconst withconnect = connect(mapStatetoProps, mapDispatchtoProps);\r\n\r\nconst FORM_NAME = \"TASK_FORM\";\r\n\r\nconst withReduxForm = reduxForm({\r\n  form: FORM_NAME,\r\n  validate,\r\n});\r\n\r\nexport default compose(\r\n  withconnect,\r\n  withReduxForm,\r\n  withStyles(style)\r\n)(TaskFormEdit);\r\n","const style = () => ({\r\n  cardActions: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  hotelName: {\r\n    backgroundColor: \"#FFC0CB\",\r\n    color: \"white\",\r\n    fontWeight: 600,\r\n    textAlign: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  buttonDelete: {\r\n    fontSize: 8,\r\n    minWidth: 30,\r\n  },\r\n  rowContainer: {\r\n    height: 50,\r\n  },\r\n});\r\n\r\nexport default style;\r\n","import { Button, TableBody, withStyles } from \"@material-ui/core\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { Component } from \"react\";\r\nimport style from \"./style\";\r\n\r\nclass TaskList extends Component {\r\n  deleteTask = (status, totalPrice) => {\r\n    this.props.deleteTask(status, totalPrice);\r\n  };\r\n\r\n  editTask = (status, notes) => {\r\n    this.props.editTask(status, notes);\r\n  };\r\n\r\n  render() {\r\n    const { classes, status, deleteTask } = this.props;\r\n    var totalPrice = null;\r\n    totalPrice = status.price * status.quantity;\r\n\r\n    return (\r\n      <TableBody>\r\n        <TableRow className={classes.rowContainer}>\r\n          <TableCell className={classes.hotelName}>\r\n            {status.hotelName}\r\n          </TableCell>\r\n          <TableCell>{status.roomName}</TableCell>\r\n          {this.showInclude()}\r\n          {this.showStorage()}\r\n          <TableCell align=\"right\">\r\n            {new Intl.NumberFormat(\"ja-JP\", {\r\n              style: \"currency\",\r\n              currency: \"JPY\",\r\n            }).format(status.price)}\r\n          </TableCell>\r\n          <TableCell align=\"right\">{status.quantity}</TableCell>\r\n          <TableCell align=\"right\">\r\n            {/* {this.showToTalPrice(status.price, status.quantity)} */}\r\n\r\n            {new Intl.NumberFormat(\"ja-JP\", {\r\n              style: \"currency\",\r\n              currency: \"JPY\",\r\n            }).format(totalPrice)}\r\n          </TableCell>\r\n          <TableCell align=\"right\">{status.notes}</TableCell>\r\n          <TableCell align=\"right\" className={classes.buttonContainer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              onClick={() => this.deleteTask(status, totalPrice)}\r\n              className={classes.buttonDelete}\r\n            >\r\n              Xóa\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              className={classes.buttonDelete}\r\n              onClick={() => this.editTask(status, status.notes)}\r\n            >\r\n              Sửa\r\n            </Button>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableBody>\r\n    );\r\n  }\r\n\r\n  showInclude = () => {\r\n    const { status } = this.props;\r\n    if (status && status.roomName === \"Standard Double Room\") {\r\n      return <TableCell align=\"right\">Miễn phí sân tennis</TableCell>;\r\n    } else if (status && status.roomName === \"Superior Room\") {\r\n      return <TableCell align=\"right\">Spa miễn phí</TableCell>;\r\n    } else if (status && status.roomName === \"Deluxe Room\") {\r\n      return <TableCell align=\"right\">Chính sách đổi trả miễn phí</TableCell>;\r\n    }\r\n  };\r\n  showStorage = () => {\r\n    const { status } = this.props;\r\n    if (status && status.roomName === \"Standard Double Room\") {\r\n      return <TableCell align=\"right\">2</TableCell>;\r\n    } else if (status && status.roomName === \"Superior Room\") {\r\n      return <TableCell align=\"right\">4</TableCell>;\r\n    } else if (status && status.roomName === \"Deluxe Room\") {\r\n      return <TableCell align=\"right\">6</TableCell>;\r\n    }\r\n  };\r\n}\r\n\r\nexport default withStyles(style)(TaskList);\r\n","export const STATUSES = [\r\n  {\r\n    value: 0,\r\n    name: \"Ready\",\r\n  },\r\n];\r\n\r\nexport const STATUS_CODE = {\r\n  SUCCESS: 200,\r\n  CREATED: 201,\r\n  UPDATED: 202,\r\n};\r\n\r\nexport const HOTEL_LIST = [\r\n  {\r\n    id: 1,\r\n    hotel: \"Marina Bay\",\r\n    image:\r\n      \"https://danhkhoireal.vn/wp-content/uploads/2019/08/marina-bay-vung-tau.jpg\",\r\n    roomNameS: \"Standard Double Room\",\r\n    roomNameSS: \"Superior Room\",\r\n    roomNameSSS: \"Deluxe Room\",\r\n    include1: \"Wifi miễn phí\",\r\n    include2: \"Miễn phí ăn sáng\",\r\n    storage: 4,\r\n    priceS: 650000,\r\n    priceSS: 850000,\r\n    priceSSS: 1000000,\r\n\r\n    status: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    hotel: \"Sweet Hotel\",\r\n    image:\r\n      \"https://hanoi-capital.com/media/cache/data/demo/tin-tuc/tiem-nang-du-lich-lon-thi-truong-bds-nghi-duong-mui-ne-tang-nhiet-cr-1200x630.jpg\",\r\n    roomNameS: \"Standard Double Room\",\r\n    roomNameSS: \"Superior Room\",\r\n    roomNameSSS: \"Deluxe Room\",\r\n    include1: \"Wifi miễn phí\",\r\n    include2: \"Chính sách hủy phòng\",\r\n    storage: 2,\r\n    priceS: 650000,\r\n    priceSS: 850000,\r\n    priceSSS: 1000000,\r\n\r\n    status: 1,\r\n  },\r\n  {\r\n    id: 3,\r\n    hotel: \"Divine Bay\",\r\n    image:\r\n      \"https://cdn.yeudulich.com/1200x630/media/attraction/attraction/02/e3/6d26-d1fd-4ca0-b15a-94ed7c06dd12.jpg\",\r\n    roomNameS: \"Standard Double Room\",\r\n    roomNameSS: \"Superior Room\",\r\n    roomNameSSS: \"Deluxe Room\",\r\n    include1: \"Wifi miễn phí\",\r\n    include2: \"Tennis miễn phí\",\r\n    storage: 2,\r\n    priceS: 650000,\r\n    priceSS: 850000,\r\n    priceSSS: 1000000,\r\n\r\n    status: 2,\r\n  },\r\n];\r\n","const style = () => ({\r\n  root: {\r\n    marginTop: 20,\r\n    padding: 10,\r\n  },\r\n  items: {\r\n    justifyContent: \"center\",\r\n  },\r\n  fab: {\r\n    float: \"left\",\r\n    marginTop: 20,\r\n  },\r\n  media: {\r\n    width: \"auto\",\r\n    height: 200,\r\n  },\r\n  gridHotel: {\r\n    padding: 10,\r\n  },\r\n  rootHotel: {\r\n    height: 400,\r\n  },\r\n  buttonHotel: {\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  button: {\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonSubmit: {\r\n    marginRight: 10,\r\n  },\r\n  TextField: {\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n  },\r\n  editContainer: {\r\n    padding: 20,\r\n  },\r\n  table: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default style;\r\n","import { Box, Button, withStyles } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators, compose } from \"redux\";\r\nimport TaskForm from \"../../component/TaskForm\";\r\nimport TaskFormEdit from \"../../component/TaskFormEdit\";\r\nimport TaskList from \"../../component/TaskList\";\r\nimport { HOTEL_LIST } from \"../../constants/status\";\r\nimport * as taskActionsCreators from \"./../../actions/index\";\r\nimport { fetchdata } from \"./../../actions/index\";\r\nimport * as modalActionCretors from \"./../../actions/modal\";\r\nimport style from \"./style\";\r\n\r\nclass TaskBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      title: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchdata();\r\n  }\r\n\r\n  // render hotel list\r\n\r\n  renderHotel = () => {\r\n    const { classes } = this.props;\r\n    let xhtml = null;\r\n    xhtml = HOTEL_LIST.map((items, index) => {\r\n      if (items.status === 0) {\r\n        return (\r\n          <Grid item xs={12} md={4} key={index} className={classes.gridHotel}>\r\n            <Card className={classes.rootHotel}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={items.image}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {items.hotel}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n\r\n              <CardActions className={classes.buttonHotel}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(items.hotel, items.priceS, items.roomNameS)\r\n                  }\r\n                >\r\n                  {items.roomNameS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSS,\r\n                      items.roomNameSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSSS,\r\n                      items.roomNameSSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSSS}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      } else if (items.status === 1) {\r\n        return (\r\n          <Grid item xs={12} md={4} key={index} className={classes.gridHotel}>\r\n            <Card className={classes.rootHotel}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={items.image}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {items.hotel}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n\r\n              <CardActions className={classes.buttonHotel}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(items.hotel, items.priceS, items.roomNameS)\r\n                  }\r\n                >\r\n                  {items.roomNameS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  disabled\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSS,\r\n                      items.roomNameSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSSS,\r\n                      items.roomNameSSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSSS}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return (\r\n          <Grid item xs={12} md={4} key={index} className={classes.gridHotel}>\r\n            <Card className={classes.rootHotel}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={items.image}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {items.hotel}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n\r\n              <CardActions className={classes.buttonHotel}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(items.hotel, items.priceS, items.roomNameS)\r\n                  }\r\n                >\r\n                  {items.roomNameS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  disabled\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSS,\r\n                      items.roomNameSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSS}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  arial-label=\"add\"\r\n                  size=\"small\"\r\n                  variant=\"contained\"\r\n                  disabled\r\n                  className={classes.fab}\r\n                  onClick={() =>\r\n                    this.addTaskRoom(\r\n                      items.hotel,\r\n                      items.priceSSS,\r\n                      items.roomNameSSS\r\n                    )\r\n                  }\r\n                >\r\n                  {items.roomNameSSS}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n\r\n    return xhtml;\r\n  };\r\n\r\n  // render grid list\r\n  showRenderGrid = () => {\r\n    const { classes, listRoom } = this.props;\r\n    let xhtml = null;\r\n\r\n    xhtml = listRoom.map((status, index) => {\r\n      return (\r\n        <TaskList\r\n          xs={12}\r\n          md={12}\r\n          deleteTask={this.deleteTask}\r\n          editTask={() => this.editTask(status)}\r\n          key={status.id}\r\n          status={status}\r\n        ></TaskList>\r\n      );\r\n    });\r\n\r\n    return xhtml;\r\n  };\r\n\r\n  /////delete////\r\n  deleteTask = (status, totalPrice) => {\r\n    const { modalActionCretors, classes } = this.props;\r\n    const {\r\n      showmodal,\r\n      changemodaltitle,\r\n      changemodalcontent,\r\n      hidemodal,\r\n    } = modalActionCretors;\r\n    showmodal();\r\n    changemodaltitle(\"Xóa khách sạn đã chọn ?\");\r\n    changemodalcontent(\r\n      <div>\r\n        <p>\r\n          Bạn có muốn xóa {status.roomName}, <strong>{status.hotelName}</strong>{\" \"}\r\n          ?\r\n        </p>\r\n        <div className={classes.button}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            size=\"small\"\r\n            className={classes.buttonSubmit}\r\n            onClick={() => this.onDeleteData(status, totalPrice)}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"button\"\r\n            size=\"small\"\r\n            onClick={hidemodal}\r\n          >\r\n            Cancle\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onDeleteData = (status) => {\r\n    const { id } = status;\r\n    console.log(status);\r\n    console.log(\"id :\", id);\r\n    const { taskActionsCreators, modalActionCretors } = this.props;\r\n    const { hidemodal } = modalActionCretors;\r\n    const { deletetask } = taskActionsCreators;\r\n    deletetask(id);\r\n  };\r\n\r\n  editTask = (status) => {\r\n    console.log(\"status của edit :\", status);\r\n\r\n    const { modalActionCretors, classes, taskActionsCreators } = this.props;\r\n    const {\r\n      showmodal,\r\n      changemodaltitle,\r\n      changemodalcontent,\r\n      hidemodal,\r\n    } = modalActionCretors;\r\n    const { setdata } = taskActionsCreators;\r\n    setdata(status);\r\n    showmodal();\r\n    changemodaltitle(\"Chỉnh sửa ghi chú, số lượng phòng\");\r\n    changemodalcontent(\r\n      <TaskFormEdit\r\n        status={status}\r\n        onEditTask={this.onEditTask}\r\n        hidemodal={hidemodal}\r\n      ></TaskFormEdit>\r\n    );\r\n  };\r\n\r\n  onEditTask = (data) => {\r\n    console.log(\"data từ edit :\", data);\r\n  };\r\n\r\n  ///add /////\r\n\r\n  addTaskRoom = (hotel, price, room) => {\r\n    const { modalActionCretors } = this.props;\r\n    const {\r\n      showmodal,\r\n      changemodaltitle,\r\n      changemodalcontent,\r\n      hidemodal,\r\n    } = modalActionCretors;\r\n    showmodal();\r\n    changemodaltitle(\"Add typeof Room\");\r\n    changemodalcontent(\r\n      <TaskForm hotel={hotel} price={price} room={room} hidemodal={hidemodal} />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Grid container className={classes.hotelContainer}>\r\n          {this.renderHotel()}\r\n        </Grid>\r\n\r\n        {/* list  */}\r\n        <Grid container spacing={3} className={classes.items}>\r\n          <Grid item xs={12} md={12}>\r\n            <Box mt={2} mb={2}>\r\n              <div className={classes.status}></div>\r\n            </Box>\r\n            <Table\r\n              className={classes.table}\r\n              size=\"small\"\r\n              aria-label=\"a dense table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Tên Khách Sạn</TableCell>\r\n                  <TableCell>Loại Phòng</TableCell>\r\n                  <TableCell align=\"right\">Giá này đã bao gồm</TableCell>\r\n                  <TableCell align=\"right\">Sức chứa</TableCell>\r\n                  <TableCell align=\"right\">Giá phòng/đêm</TableCell>\r\n                  <TableCell align=\"right\">Số lượng</TableCell>\r\n                  <TableCell align=\"right\">Tổng tiền</TableCell>\r\n                  <TableCell align=\"right\">Ghi chú</TableCell>\r\n                  <TableCell align=\"right\">Chỉnh sửa</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              {/* show items  */}\r\n              {this.showRenderGrid()}\r\n            </Table>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    listRoom: state.task.listRoom,\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n  return {\r\n    fetchdata: bindActionCreators(fetchdata, dispatch),\r\n    modalActionCretors: bindActionCreators(modalActionCretors, dispatch),\r\n    taskActionsCreators: bindActionCreators(taskActionsCreators, dispatch),\r\n  };\r\n};\r\n\r\nconst withconnect = connect(mapStatetoProps, mapDispatchtoProps);\r\n\r\nexport default compose(withconnect, withStyles(style))(TaskBoard);\r\n","const style = theme => ({\r\n  modal: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    position: \"absolute\",\r\n    width: 600,\r\n    backgroundColor: theme.palette.background.paper,\r\n\r\n    boxShadow: theme.shadows[5]\r\n    // padding: theme.spacing(2, 4, 3)\r\n  },\r\n\r\n  container: {\r\n    padding: theme.spacing(2, 4, 3)\r\n  },\r\n  header: {\r\n    backgroundColor: \"#3f51b5\",\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    fontSize: 20,\r\n    color: \"white\"\r\n  },\r\n  icon: {\r\n    cursor: \"pointer\"\r\n  }\r\n});\r\n\r\nexport default style;\r\n","import React, { Component } from \"react\";\r\nimport { withStyles, Modal } from \"@material-ui/core\";\r\nimport style from \"./style\";\r\nimport TaskForm from \"../TaskForm\";\r\nimport { connect } from \"react-redux\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { compose, bindActionCreators } from \"redux\";\r\nimport * as modalActionCreators from \"./../../actions/modal\";\r\n\r\nclass ModalBoard extends Component {\r\n  render() {\r\n    const { classes, open, modalActionCreators, component, title } = this.props;\r\n    const { handleClose, hidemodal } = modalActionCreators;\r\n    return (\r\n      <Modal open={open} onClose={handleClose}>\r\n        <div className={classes.modal}>\r\n          <div className={classes.header}>\r\n            <span className={classes.title}>{title}</span>\r\n            <ClearIcon className={classes.icon} onClick={hidemodal}></ClearIcon>\r\n          </div>\r\n          <div className={classes.content}>{component}</div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n  return {\r\n    open: state.modal.showModal,\r\n    title: state.modal.title,\r\n    component: state.modal.component\r\n  };\r\n};\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n  return {\r\n    modalActionCreators: bindActionCreators(modalActionCreators, dispatch)\r\n  };\r\n};\r\n\r\nconst withconnect = connect(mapStatetoProps, mapDispatchtoProps);\r\n\r\nexport default compose(withconnect, withStyles(style))(ModalBoard);\r\n","import axios from \"axios\";\r\n\r\nclass AxiosService {\r\n  constructor() {\r\n    const instance = axios.create();\r\n    this.instance = instance;\r\n  }\r\n\r\n  handlesuccess = (res) => {\r\n    return res;\r\n  };\r\n\r\n  handlefail = (error) => {\r\n    return Promise.reject(error);\r\n  };\r\n\r\n  get(url) {\r\n    return this.instance.get(url);\r\n  }\r\n\r\n  post(url, body) {\r\n    return this.instance.post(url, body);\r\n  }\r\n  delete(url) {\r\n    return this.instance.delete(url);\r\n  }\r\n  put(url, body) {\r\n    return this.instance.put(url, body);\r\n  }\r\n}\r\n\r\nexport default new AxiosService();\r\n","import AxiosService from \"./../AxiosService/index\";\r\nimport { API_URL } from \"./../constants/index\";\r\n\r\nconst url = \"task\";\r\n\r\nexport const fetchListData = () => {\r\n  return AxiosService.get(`${API_URL}/${url}`);\r\n};\r\n\r\nexport const addtaskData = (data) => {\r\n  return AxiosService.post(`${API_URL}/${url}`, data);\r\n};\r\n\r\nexport const deleteData = (id) => {\r\n  return AxiosService.delete(`${API_URL}/${url}/${id}`);\r\n};\r\n\r\nexport const updateData = (data, id) => {\r\n  return AxiosService.put(`${API_URL}/${url}/${id}`, data);\r\n};\r\n","import {\r\n  fork,\r\n  take,\r\n  call,\r\n  takeLatest,\r\n  takeEvery,\r\n  put,\r\n  delay,\r\n  select,\r\n} from \"redux-saga/effects\";\r\nimport * as types from \"./../constants/index\";\r\nimport {\r\n  fetchListData,\r\n  addtaskData,\r\n  deleteData,\r\n  updateData,\r\n} from \"./../apis/index\";\r\n\r\nimport {\r\n  fetchdatasucces,\r\n  fetchdatafail,\r\n  showloading,\r\n  hideloading,\r\n  addtasksuccess,\r\n  addtaskfail,\r\n  deletetasksuccess,\r\n  deletetaskfail,\r\n  updatetasksuccess,\r\n  updatetaskfail,\r\n} from \"../actions\";\r\nimport { STATUS_CODE } from \"../constants/status\";\r\nimport { hidemodal } from \"../actions/modal\";\r\n\r\nfunction* addtasksaga({ payload }) {\r\n  const { roomName } = payload;\r\n\r\n  yield put(showloading());\r\n  const resp = yield call(addtaskData, roomName);\r\n  const { status, data } = resp;\r\n\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(addtasksuccess(data));\r\n  } else {\r\n    yield put(addtaskfail(data));\r\n  }\r\n  yield delay(1000);\r\n  yield put(hideloading());\r\n}\r\n\r\nfunction* deletesaga({ payload }) {\r\n  const { id } = payload;\r\n  yield put(showloading());\r\n  const res = yield call(deleteData, id);\r\n  const { status, data } = res;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(deletetasksuccess(id));\r\n    yield put(hidemodal());\r\n  } else {\r\n    yield put(deletetaskfail(data));\r\n  }\r\n\r\n  yield delay(1000);\r\n  yield put(hideloading());\r\n}\r\n\r\nfunction* updatesaga({ payload }) {\r\n  const { upData } = payload;\r\n  const roomEditing = yield select((state) => state.task.roomEditing);\r\n  yield put(showloading());\r\n  const res = yield call(updateData, upData, roomEditing.id);\r\n  const { data, status } = res;\r\n  if (status === STATUS_CODE.SUCCESS) {\r\n    yield put(updatetasksuccess(data));\r\n    yield put(hidemodal());\r\n  } else {\r\n    yield put(updatetaskfail(data));\r\n  }\r\n  yield delay(1000);\r\n  yield put(hideloading());\r\n}\r\n\r\nfunction* fetchListTaskSaga() {\r\n  while (true) {\r\n    yield take(types.FETCH_DATA);\r\n    yield put(showloading());\r\n    yield delay(1000);\r\n    const res = yield call(fetchListData);\r\n    var { status, data } = res;\r\n    if (status === STATUS_CODE.SUCCESS) {\r\n      yield put(fetchdatasucces(data));\r\n    } else {\r\n      yield put(fetchdatafail(data));\r\n    }\r\n    yield put(hideloading());\r\n  }\r\n}\r\n\r\nfunction* rootsaga() {\r\n  yield fork(fetchListTaskSaga);\r\n  yield takeLatest(types.ADD_DATA, addtasksaga);\r\n  yield takeEvery(types.DELETE_DATA, deletesaga);\r\n  yield takeLatest(types.UPDATE_DATA, updatesaga);\r\n}\r\n\r\nexport default rootsaga;\r\n","import * as types from \"./../constants/index\";\r\n\r\nconst initialstate = {\r\n  listRoom: [],\r\n  roomEditing: null,\r\n};\r\n\r\nconst task = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_DATA:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.FETCH_DATA_SUCCESS:\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        listRoom: data,\r\n      };\r\n    case types.FETCH_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case types.ADD_DATA:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.ADD_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        listRoom: state.listRoom.concat([data]),\r\n      };\r\n    case types.ADD_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.DELETE_DATA:\r\n      return {\r\n        ...state,\r\n      };\r\n    case types.DELETE_DATA_SUCCESS:\r\n      const { data: taskId } = action.payload;\r\n      return {\r\n        ...state,\r\n        listRoom: state.listRoom.filter((items) => items.id !== taskId),\r\n      };\r\n    case types.DELETE_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        listRoom: data,\r\n      };\r\n\r\n    case types.SET_DATA_EDITING:\r\n      const { task } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        roomEditing: task,\r\n      };\r\n\r\n    case types.UPDATE_DATA: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case types.UPDATE_DATA_SUCCESS:\r\n      const { listRoom } = state;\r\n      const { data: UP } = action.payload;\r\n      const index = listRoom.findIndex((x) => x.id === UP.id);\r\n      if (index !== -1) {\r\n        const newList = [\r\n          ...listRoom.slice(0, index),\r\n          UP,\r\n          ...listRoom.slice(index + 1),\r\n        ];\r\n        console.log(\"newlist là : \", newList);\r\n        return {\r\n          ...state,\r\n          listRoom: newList,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default task;\r\n","import * as types from \"./../constants/ui\";\r\n\r\nconst initialstate = {\r\n  showloading: false,\r\n};\r\n\r\nconst ui = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_LOADING:\r\n      return {\r\n        ...state,\r\n        showloading: true,\r\n      };\r\n    case types.HIDE_LOADING:\r\n      return {\r\n        ...state,\r\n        showloading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ui;\r\n","import * as types from \"./../constants/ui\";\r\n\r\nconst initialstate = {\r\n  showModal: false,\r\n  title: \"\",\r\n  component: null,\r\n};\r\n\r\nconst modal = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case types.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: true,\r\n      };\r\n    case types.HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        showModal: false,\r\n        title: \"\",\r\n        component: null,\r\n      };\r\n    case types.CHANGE_MODAL_TITLE:\r\n      const { title } = action.payload;\r\n      return {\r\n        ...state,\r\n        title: title,\r\n      };\r\n    case types.CHANGE_MODAL_CONTENT:\r\n      const { component } = action.payload;\r\n      return {\r\n        ...state,\r\n        component: component,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modal;\r\n","import { combineReducers } from \"redux\";\r\nimport task from \"./task\";\r\nimport ui from \"./ui\";\r\nimport modal from \"./modal\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst myReducer = combineReducers({\r\n  task,\r\n  ui,\r\n  modal,\r\n  form: formReducer\r\n});\r\n\r\nexport default myReducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport rootsaga from \"./../saga/index\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport thunk from \"redux-thunk\";\r\nimport myReducer from \"./../reducer/index\";\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  typeof window === \"object\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false\r\n      })\r\n    : compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configStore = () => {\r\n  const middleware = [thunk, sagaMiddleware];\r\n  const enhancer = [applyMiddleware(...middleware)];\r\n  const store = createStore(myReducer, composeEnhancers(...enhancer));\r\n\r\n  sagaMiddleware.run(rootsaga);\r\n  return store;\r\n};\r\n\r\nexport default configStore;\r\n","const style = () => ({});\r\n\r\nexport default style;\r\n","import { withStyles } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport GlobalLoading from \"../../GlobalLoading/GlobalLoading\";\nimport TaskBoard from \"../TaskBoard\";\nimport ModalBoard from \"./../../component/Modal\";\nimport configStore from \"./../../store/configStore\";\nimport style from \"./style\";\n\nconst store = configStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ModalBoard></ModalBoard>\n        <GlobalLoading></GlobalLoading>\n        <TaskBoard />\n      </Provider>\n    );\n  }\n}\n\nexport default withStyles(style)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./container/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}